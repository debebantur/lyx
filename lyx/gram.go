// Code generated by goyacc -o lyx/gram.go -p yy lyx/gram.y. DO NOT EDIT.

//line lyx/gram.y:3
package lyx

import __yyfmt__ "fmt"

//line lyx/gram.y:3

import (
	"crypto/rand"
	"encoding/hex"
)

func randomHex(n int) (string, error) {
	bytes := make([]byte, n)
	if _, err := rand.Read(bytes); err != nil {
		return "", err
	}
	return hex.EncodeToString(bytes), nil
}

type LyxParser yyParser

func NewLyxParser() LyxParser {
	return yyNewParser()
}

//line lyx/gram.y:29
type yySymType struct {
	yys     int
	str     string
	strlist []string
	byte    byte
	bytes   []byte
	int     int
	bool    bool
	empty   struct{}

	node      Node
	from_list []FromClauseNode
	from      FromClauseNode
	tableelt  []TableElt
	tableref  FromClauseNode

	selectStmt *Select

	nodeList []Node
}

const SCONST = 57346
const IDENT = 57347
const CREATE = 57348
const ALTER = 57349
const ROLE = 57350
const DATABASE = 57351
const NATURAL = 57352
const TABLE = 57353
const INDEX = 57354
const SELECT = 57355
const UPDATE = 57356
const INSERT = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const AND = 57361
const VALUES = 57362
const OR = 57363
const EXPLAIN = 57364
const EXECUTE = 57365
const PREPARE = 57366
const BEGIN = 57367
const COMMIT = 57368
const ROLLBACK = 57369
const VACUUM = 57370
const CLUSTER = 57371
const ANALYZE = 57372
const INTO = 57373
const OUTER_P = 57374
const FULL = 57375
const RIGHT = 57376
const LEFT = 57377
const INNER_P = 57378
const DROP = 57379
const TRUNCATE = 57380
const FETCH = 57381
const FOR = 57382
const ORDER = 57383
const GROUP = 57384
const BY = 57385
const OFFSET = 57386
const LIMIT = 57387
const WINDOW = 57388
const CROSS = 57389
const SET = 57390
const RESET = 57391
const LOCAL = 57392
const ALL = 57393
const PRIMARY = 57394
const KEY = 57395
const FOREIGN = 57396
const REFERENCES = 57397
const USING = 57398
const TCOLON = 57399
const TCOMMA = 57400
const TOPENBR = 57401
const TCLOSEBR = 57402
const TSQOPENBR = 57403
const TSQCLOSEBR = 57404
const TSEMICOLON = 57405
const TNOT_EQUALS = 57406
const TDOT = 57407
const NULL_P = 57408
const ISNULL = 57409
const ON = 57410
const JOIN = 57411
const TPLUS = 57412
const TMINUS = 57413
const TMUL = 57414
const TDIV = 57415
const TGREATER = 57416
const TGREATER_EQUALS = 57417
const TLESS = 57418
const TLESS_EQUALS = 57419
const TMOD = 57420
const TPOW = 57421
const DELIMITERS = 57422
const PROGRAM = 57423
const STDIN = 57424
const FALSE_P = 57425
const TRUE_P = 57426
const copy_generic_opt_list = 57427
const BINARY = 57428
const FREEZE = 57429
const DELIMITER = 57430
const CSV = 57431
const HEADER_P = 57432
const QUOTE = 57433
const ESCAPE = 57434
const FORCE = 57435
const ENCODING = 57436
const TEQ = 57437
const OP = 57438
const ONLY = 57439
const RETURNING = 57440
const COPY = 57441
const ARRAY = 57442
const ROW = 57443
const SETOF = 57444
const INT_P = 57445
const INTEGER = 57446
const SMALLINT = 57447
const BIGINT = 57448
const REAL = 57449
const FLOAT_P = 57450
const DOUBLE_P = 57451
const DECIMAL_P = 57452
const DEC = 57453
const NUMERIC = 57454
const BOOLEAN_P = 57455
const BIT = 57456
const YEAR_P = 57457
const MONTH_P = 57458
const DAY_P = 57459
const HOUR_P = 57460
const MINUTE_P = 57461
const SECOND_P = 57462
const CHARACTER = 57463
const CHAR_P = 57464
const VARCHAR = 57465
const NATIONAL = 57466
const NCHAR = 57467
const PRECISION = 57468
const VARYING = 57469
const TIMESTAMP = 57470
const TIME = 57471
const INTERVAL = 57472
const WITHOUT = 57473
const ZONE = 57474
const IS = 57475
const NOT = 57476
const NULL = 57477
const DISTINCT = 57478
const DEFAULT = 57479
const NORMALIZED = 57480
const NOTNULL = 57481
const DOCUMENT_P = 57482
const ASYMMETRIC = 57483
const ASC = 57484
const DESC = 57485
const NULLS_LA = 57486
const FIRST_P = 57487
const LAST_P = 57488
const TO = 57489
const STDOUT = 57490
const LATERAL_P = 57491
const ORDINALITY = 57492
const WITH_LA = 57493
const COLLATE = 57494
const AS = 57495
const UNION = 57496
const EXCEPT = 57497
const INTERSECT = 57498
const BETWEEN = 57499
const IN_P = 57500
const LIKE = 57501
const ILIKE = 57502
const SIMILAR = 57503
const NOT_LA = 57504
const UNBOUNDED = 57505
const PARTITION = 57506
const RANGE = 57507
const ROWS = 57508
const GROUPS = 57509
const PRECEDING = 57510
const FOLLOWING = 57511
const CUBE = 57512
const ROLLUP = 57513
const Op = 57514
const OPERATOR = 57515
const AT = 57516
const UMINUS = 57517
const TYPECAST = 57518

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"SCONST",
	"IDENT",
	"CREATE",
	"ALTER",
	"ROLE",
	"DATABASE",
	"NATURAL",
	"TABLE",
	"INDEX",
	"SELECT",
	"UPDATE",
	"INSERT",
	"DELETE",
	"FROM",
	"WHERE",
	"AND",
	"VALUES",
	"OR",
	"EXPLAIN",
	"EXECUTE",
	"PREPARE",
	"BEGIN",
	"COMMIT",
	"ROLLBACK",
	"VACUUM",
	"CLUSTER",
	"ANALYZE",
	"INTO",
	"OUTER_P",
	"FULL",
	"RIGHT",
	"LEFT",
	"INNER_P",
	"DROP",
	"TRUNCATE",
	"FETCH",
	"FOR",
	"ORDER",
	"GROUP",
	"BY",
	"OFFSET",
	"LIMIT",
	"WINDOW",
	"CROSS",
	"SET",
	"RESET",
	"LOCAL",
	"ALL",
	"PRIMARY",
	"KEY",
	"FOREIGN",
	"REFERENCES",
	"USING",
	"TCOLON",
	"TCOMMA",
	"TOPENBR",
	"TCLOSEBR",
	"TSQOPENBR",
	"TSQCLOSEBR",
	"TSEMICOLON",
	"TNOT_EQUALS",
	"TDOT",
	"NULL_P",
	"ISNULL",
	"ON",
	"JOIN",
	"TPLUS",
	"TMINUS",
	"TMUL",
	"TDIV",
	"TGREATER",
	"TGREATER_EQUALS",
	"TLESS",
	"TLESS_EQUALS",
	"TMOD",
	"TPOW",
	"DELIMITERS",
	"PROGRAM",
	"STDIN",
	"FALSE_P",
	"TRUE_P",
	"copy_generic_opt_list",
	"BINARY",
	"FREEZE",
	"DELIMITER",
	"CSV",
	"HEADER_P",
	"QUOTE",
	"ESCAPE",
	"FORCE",
	"ENCODING",
	"TEQ",
	"OP",
	"ONLY",
	"RETURNING",
	"COPY",
	"ARRAY",
	"ROW",
	"SETOF",
	"INT_P",
	"INTEGER",
	"SMALLINT",
	"BIGINT",
	"REAL",
	"FLOAT_P",
	"DOUBLE_P",
	"DECIMAL_P",
	"DEC",
	"NUMERIC",
	"BOOLEAN_P",
	"BIT",
	"YEAR_P",
	"MONTH_P",
	"DAY_P",
	"HOUR_P",
	"MINUTE_P",
	"SECOND_P",
	"CHARACTER",
	"CHAR_P",
	"VARCHAR",
	"NATIONAL",
	"NCHAR",
	"PRECISION",
	"VARYING",
	"TIMESTAMP",
	"TIME",
	"INTERVAL",
	"WITHOUT",
	"ZONE",
	"IS",
	"NOT",
	"NULL",
	"DISTINCT",
	"DEFAULT",
	"NORMALIZED",
	"NOTNULL",
	"DOCUMENT_P",
	"ASYMMETRIC",
	"ASC",
	"DESC",
	"NULLS_LA",
	"FIRST_P",
	"LAST_P",
	"TO",
	"STDOUT",
	"LATERAL_P",
	"ORDINALITY",
	"WITH_LA",
	"COLLATE",
	"AS",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"BETWEEN",
	"IN_P",
	"LIKE",
	"ILIKE",
	"SIMILAR",
	"NOT_LA",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"CUBE",
	"ROLLUP",
	"Op",
	"OPERATOR",
	"AT",
	"UMINUS",
	"TYPECAST",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lyx/gram.y:2518

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 209,
	59, 236,
	-2, 391,
	-1, 292,
	59, 236,
	-2, 391,
	-1, 335,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 280,
	-1, 336,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 281,
	-1, 337,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 282,
	-1, 338,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 283,
	-1, 339,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 284,
	-1, 340,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 285,
	-1, 399,
	59, 391,
	-2, 139,
	-1, 522,
	67, 0,
	133, 0,
	139, 0,
	-2, 298,
	-1, 598,
	67, 0,
	133, 0,
	139, 0,
	-2, 299,
	-1, 599,
	157, 0,
	-2, 300,
	-1, 606,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 318,
	-1, 607,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 319,
	-1, 608,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 320,
	-1, 609,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 321,
	-1, 610,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 322,
	-1, 611,
	64, 0,
	74, 0,
	75, 0,
	76, 0,
	77, 0,
	95, 0,
	-2, 323,
	-1, 622,
	80, 462,
	-2, 510,
}

const yyPrivate = 57344

const yyLast = 1658

var yyAct = [...]int16{
	205, 57, 394, 473, 707, 281, 662, 673, 358, 59,
	275, 656, 665, 572, 560, 468, 619, 548, 427, 571,
	284, 567, 474, 622, 466, 207, 416, 376, 396, 50,
	52, 54, 56, 176, 177, 178, 179, 550, 184, 256,
	406, 395, 229, 490, 384, 418, 187, 293, 17, 294,
	432, 288, 218, 186, 286, 285, 220, 20, 221, 19,
	222, 18, 212, 264, 244, 708, 245, 51, 246, 399,
	666, 197, 657, 405, 430, 232, 233, 234, 235, 500,
	292, 243, 237, 236, 237, 429, 252, 232, 233, 234,
	235, 239, 242, 238, 241, 236, 237, 471, 509, 244,
	245, 244, 246, 234, 235, 428, 721, 722, 705, 236,
	237, 243, 240, 244, 248, 352, 426, 232, 233, 234,
	235, 239, 242, 238, 241, 236, 237, 244, 623, 508,
	507, 506, 476, 594, 289, 515, 593, 514, 433, 422,
	437, 438, 240, 244, 231, 243, 429, 417, 248, 582,
	714, 232, 233, 234, 235, 239, 242, 238, 241, 236,
	237, 504, 250, 583, 584, 417, 428, 586, 417, 407,
	620, 213, 546, 278, 250, 712, 240, 244, 219, 231,
	247, 231, 698, 225, 226, 227, 249, 551, 429, 682,
	683, 672, 216, 231, 37, 39, 38, 40, 529, 253,
	254, 255, 729, 22, 250, 257, 624, 231, 428, 189,
	569, 486, 265, 265, 247, 393, 265, 397, 713, 217,
	249, 447, 485, 231, 287, 266, 369, 472, 261, 276,
	43, 265, 453, 669, 251, 643, 454, 187, 250, 578,
	642, 329, 330, 331, 332, 333, 334, 335, 336, 337,
	338, 339, 340, 341, 342, 343, 291, 231, 636, 649,
	668, 650, 361, 580, 453, 271, 648, 263, 267, 265,
	501, 365, 625, 636, 274, 641, 273, 268, 272, 269,
	41, 734, 280, 636, 453, 637, 590, 398, 276, 375,
	265, 381, 728, 232, 233, 234, 235, 577, 502, 356,
	359, 236, 237, 524, 525, 526, 527, 553, 259, 552,
	403, 528, 529, 291, 392, 291, 716, 658, 717, 244,
	526, 527, 243, 645, 371, 248, 528, 529, 232, 233,
	234, 235, 239, 242, 238, 241, 236, 237, 431, 597,
	595, 402, 400, 592, 542, 408, 543, 440, 591, 477,
	344, 478, 581, 240, 244, 499, 423, 424, 425, 387,
	389, 388, 390, 452, 442, 441, 457, 347, 346, 461,
	453, 456, 455, 467, 475, 435, 436, 374, 675, 439,
	410, 399, 574, 265, 559, 230, 265, 541, 517, 510,
	497, 247, 434, 419, 421, 489, 494, 249, 496, 231,
	494, 398, 373, 484, 368, 279, 487, 262, 291, 260,
	230, 291, 553, 680, 477, 250, 459, 443, 345, 445,
	348, 444, 350, 451, 349, 479, 544, 621, 382, 354,
	469, 488, 492, 493, 231, 495, 411, 412, 413, 414,
	415, 417, 498, 691, 677, 377, 51, 628, 480, 503,
	558, 228, 51, 370, 482, 522, 631, 679, 632, 511,
	483, 380, 539, 688, 689, 690, 692, 693, 694, 695,
	696, 697, 549, 562, 547, 719, 701, 491, 3, 211,
	556, 458, 282, 521, 563, 564, 265, 265, 519, 520,
	265, 446, 55, 214, 378, 37, 573, 53, 573, 266,
	386, 49, 51, 464, 401, 555, 565, 566, 545, 353,
	570, 291, 291, 224, 554, 291, 726, 575, 725, 724,
	723, 451, 451, 387, 389, 388, 390, 715, 576, 654,
	598, 686, 599, 644, 585, 587, 588, 383, 37, 39,
	38, 40, 612, 615, 589, 42, 579, 467, 518, 516,
	614, 617, 513, 512, 475, 618, 386, 596, 568, 385,
	505, 448, 629, 44, 45, 46, 47, 48, 215, 616,
	265, 661, 704, 681, 676, 573, 626, 634, 627, 387,
	389, 388, 390, 276, 638, 557, 199, 200, 633, 258,
	635, 351, 210, 383, 640, 291, 451, 451, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 1, 182,
	183, 646, 180, 181, 647, 385, 718, 700, 678, 630,
	561, 481, 652, 379, 549, 302, 296, 297, 201, 209,
	420, 298, 314, 660, 651, 315, 299, 573, 655, 653,
	316, 663, 317, 323, 300, 659, 301, 409, 391, 465,
	664, 463, 667, 462, 687, 58, 674, 372, 670, 448,
	448, 367, 540, 613, 366, 460, 671, 206, 195, 185,
	21, 536, 537, 194, 290, 270, 276, 684, 14, 685,
	699, 702, 13, 196, 12, 11, 10, 703, 16, 663,
	202, 706, 15, 6, 449, 450, 709, 5, 4, 710,
	711, 9, 8, 720, 7, 470, 404, 204, 203, 363,
	283, 223, 2, 475, 0, 475, 727, 0, 730, 0,
	731, 732, 0, 0, 198, 208, 0, 0, 0, 0,
	475, 0, 0, 733, 448, 448, 448, 448, 448, 448,
	448, 448, 448, 448, 448, 448, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 60, 61,
	126, 69, 86, 87, 0, 166, 143, 81, 127, 104,
	171, 161, 156, 0, 95, 0, 144, 78, 70, 131,
	172, 76, 79, 117, 102, 71, 128, 0, 0, 0,
	0, 173, 135, 99, 138, 105, 92, 96, 62, 147,
	118, 0, 0, 136, 106, 148, 145, 119, 139, 129,
	100, 93, 65, 0, 0, 0, 0, 167, 0, 0,
	120, 0, 63, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 132, 113, 88, 94, 0,
	174, 133, 114, 74, 157, 122, 0, 89, 109, 0,
	115, 162, 130, 107, 155, 137, 149, 125, 152, 121,
	168, 169, 142, 163, 77, 134, 66, 150, 91, 158,
	72, 75, 110, 90, 73, 153, 111, 112, 140, 170,
	64, 159, 101, 123, 124, 67, 68, 0, 0, 141,
	175, 84, 97, 0, 151, 82, 164, 160, 108, 103,
	85, 154, 83, 146, 98, 116, 0, 165, 277, 639,
	126, 69, 86, 87, 0, 166, 143, 81, 127, 104,
	171, 161, 156, 0, 95, 0, 144, 78, 70, 131,
	172, 76, 79, 117, 102, 71, 128, 0, 0, 0,
	0, 173, 135, 99, 138, 105, 92, 96, 62, 147,
	118, 0, 0, 136, 106, 148, 145, 119, 139, 129,
	100, 93, 65, 0, 0, 0, 0, 167, 0, 0,
	120, 0, 63, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 132, 113, 88, 94, 0,
	174, 133, 114, 74, 157, 122, 0, 89, 109, 0,
	115, 162, 130, 107, 155, 137, 149, 125, 152, 121,
	168, 169, 142, 163, 77, 134, 66, 150, 91, 158,
	72, 75, 110, 90, 73, 153, 111, 112, 140, 170,
	64, 159, 101, 123, 124, 67, 68, 0, 0, 141,
	175, 84, 97, 0, 151, 82, 164, 160, 108, 103,
	85, 154, 83, 146, 98, 116, 277, 165, 126, 69,
	86, 87, 0, 166, 143, 81, 127, 104, 171, 161,
	156, 0, 95, 0, 144, 78, 70, 131, 172, 76,
	79, 117, 102, 71, 128, 0, 0, 0, 0, 173,
	135, 99, 138, 105, 92, 96, 62, 147, 118, 0,
	0, 136, 106, 148, 145, 119, 139, 129, 100, 93,
	65, 0, 0, 0, 0, 167, 0, 0, 120, 321,
	63, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 80, 132, 113, 88, 94, 0, 174, 133,
	114, 74, 157, 122, 0, 89, 109, 0, 115, 162,
	130, 107, 155, 137, 149, 125, 152, 121, 168, 169,
	142, 163, 77, 134, 66, 150, 91, 158, 72, 75,
	110, 90, 73, 153, 111, 112, 140, 170, 64, 159,
	101, 123, 124, 67, 68, 0, 0, 141, 175, 84,
	97, 0, 151, 82, 164, 160, 108, 103, 85, 154,
	83, 146, 98, 116, 245, 165, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 295, 303, 304, 305,
	306, 307, 308, 309, 310, 311, 312, 313, 322, 0,
	0, 245, 0, 246, 0, 324, 325, 326, 327, 328,
	0, 0, 318, 319, 320, 538, 0, 0, 0, 243,
	0, 0, 248, 0, 0, 232, 233, 234, 235, 239,
	242, 238, 241, 236, 237, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 243, 245, 0, 248,
	240, 244, 232, 233, 234, 235, 239, 242, 238, 241,
	236, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 240, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 245,
	0, 246, 243, 0, 249, 248, 0, 0, 232, 233,
	234, 235, 239, 242, 238, 241, 236, 237, 0, 0,
	0, 0, 250, 0, 0, 247, 0, 0, 0, 0,
	0, 249, 0, 240, 244, 0, 0, 0, 0, 0,
	0, 231, 0, 0, 243, 0, 0, 248, 0, 250,
	232, 233, 234, 235, 239, 242, 238, 241, 236, 237,
	0, 201, 209, 0, 0, 0, 0, 0, 231, 201,
	209, 247, 0, 0, 0, 240, 244, 249, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 312, 313, 322,
	0, 0, 0, 0, 0, 250, 324, 325, 326, 327,
	328, 0, 0, 318, 319, 320, 0, 201, 209, 201,
	209, 0, 0, 247, 231, 0, 196, 362, 0, 249,
	0, 0, 0, 202, 196, 360, 0, 190, 191, 364,
	0, 202, 0, 0, 0, 190, 191, 250, 0, 0,
	204, 203, 0, 0, 0, 0, 0, 0, 204, 203,
	0, 0, 201, 209, 0, 0, 231, 198, 208, 0,
	0, 0, 196, 0, 196, 198, 208, 357, 0, 202,
	523, 202, 0, 190, 191, 190, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 203, 204, 203,
	0, 192, 0, 0, 193, 0, 0, 0, 0, 192,
	0, 0, 193, 198, 208, 198, 208, 196, 0, 0,
	0, 0, 0, 0, 202, 535, 0, 0, 190, 191,
	188, 524, 525, 526, 527, 531, 534, 530, 533, 528,
	529, 204, 203, 0, 0, 0, 0, 192, 0, 192,
	193, 0, 193, 0, 35, 36, 532, 0, 198, 208,
	0, 37, 39, 38, 40, 0, 0, 0, 0, 0,
	22, 26, 29, 23, 24, 25, 30, 31, 32, 0,
	0, 0, 0, 0, 0, 34, 33, 0, 0, 0,
	0, 0, 192, 0, 0, 193, 27, 28, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 41,
}

var yyPact = [...]int16{
	1558, -1000, 167, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 167, 167, 167,
	167, 167, 181, -1000, -1000, -1000, 497, 447, 441, 497,
	754, 754, 754, 754, 754, 601, 754, 1468, 448, 74,
	476, 133, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	754, -1000, 83, 497, -1000, -1000, 754, -1000, 754, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	508, 754, 754, 754, -1000, 393, -1000, 81, -1000, -1000,
	1423, 1423, 1423, -1000, -1000, -1000, 1423, -1000, 247, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 350, 163,
	348, 494, 494, -1000, 74, 494, 525, -1000, -1000, 1052,
	78, -1000, -1000, 346, -1000, -1000, -1000, -1000, 1468, 464,
	75, 1114, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 1423, 284, -1000, -1000,
	-26, 504, -1000, 31, 31, 258, 371, 1212, -1000, 1425,
	1385, 494, 1377, 345, -1000, 161, -1000, 405, 494, 343,
	317, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1052, 440,
	-1000, 419, 1423, 370, 546, 62, 64, 499, -1000, 75,
	-78, -1000, -1000, -1000, 69, 1295, -1000, -1000, -1000, -1000,
	-1000, 321, 334, -1000, -1000, -1000, -1000, -1000, 335, 13,
	334, 334, 334, -1000, -1000, -1000, -1000, -1000, 57, 15,
	-1000, -1000, 11, 333, 11, 11, -1000, 19, 11, 31,
	31, 3, 3, 3, -32, 5, 5, 5, 5, 5,
	5, 1300, 258, 1258, -1000, 281, -1000, -1000, 474, -1000,
	-1000, 624, -1000, -1000, 1423, -1000, 174, -1000, 1300, 312,
	-1000, -1000, -1000, 311, 306, 1300, 461, 482, 494, 498,
	497, 374, 80, 494, -15, -1000, 291, 1114, 395, 408,
	417, 1300, 75, 153, 142, 75, 326, 445, 445, 445,
	-1000, -1000, -1000, 497, -1000, -1000, -1000, 376, 331, -1000,
	64, -1000, 295, 546, -1000, -71, 209, 237, 61, -1000,
	556, -16, -1000, -17, -18, -49, -1000, 330, -1000, 1423,
	-1000, 549, -1000, -1000, -1000, -1000, 548, -1000, 8, 6,
	545, -1000, 329, -1000, 544, -1000, -1000, 11, 11, -1000,
	-1000, -1000, -1000, 466, -1000, -1000, 1423, 1471, -1000, 624,
	624, -1000, 1185, 1423, -1000, -1000, -1000, -1000, 328, -1000,
	286, -1000, -1000, -1000, -1000, 368, -1000, 77, 464, 497,
	106, -1000, -1000, 249, -1000, -1000, 106, 440, 754, 398,
	325, 432, 754, 754, 546, 75, 75, 490, 141, 75,
	-1000, -1000, -1000, -1000, -1000, 494, 323, 494, -1000, 62,
	-1000, 235, 542, 209, 202, 292, 33, 45, 48, 27,
	540, 226, 288, 283, 4, 1, 280, 1423, 279, -1000,
	-1000, 1423, 17, 1423, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 248, 248, -1000, 1300,
	754, 1423, 494, -1000, 497, 464, 1423, 72, -1000, 369,
	124, -1000, -1000, 494, 124, 356, -1000, -1000, 394, 497,
	411, -1000, 415, -1000, -1000, -1000, 490, -1000, 1423, 75,
	-1000, 225, -1000, 904, 494, 215, -1000, -1000, 178, 173,
	529, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263,
	-1000, -1000, -46, -1000, -1000, -46, 206, -1000, 17, 223,
	248, 248, 119, 119, 119, -1000, 233, 233, 233, 233,
	233, 233, -1000, 201, 1300, -1000, -1000, 72, 1300, -1000,
	754, 497, 374, -1000, -1000, -1000, -1000, -79, -1000, 257,
	432, 754, 1423, -1000, 1300, -1000, 494, -1000, -82, -82,
	200, -1000, -1000, -1000, 171, -1000, -1000, -1000, -1000, 1423,
	-1000, -1000, -1000, -1000, -79, 111, 319, -1000, 389, 413,
	-1000, 355, -1000, 47, -1000, -1000, 1052, -1000, -1000, -1000,
	1300, 319, 527, -1000, 377, 97, -1000, 497, 437, 754,
	1423, -36, -1000, -1000, -1000, 464, -1000, -1000, -1000, -1000,
	-88, -88, -1000, -1000, -88, -88, 84, 523, 256, 259,
	435, 754, -1000, -1000, -1000, -39, -1000, 516, -1000, 515,
	514, 512, 220, 136, 494, -1000, -1000, 497, -1000, 754,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 354, -1000, 494,
	354, 221, -1000, 354, -1000,
}

var yyPgo = [...]int16{
	0, 712, 478, 2, 10, 711, 37, 5, 42, 710,
	20, 55, 51, 709, 706, 705, 705, 41, 8, 209,
	221, 9, 704, 48, 61, 59, 57, 702, 701, 698,
	697, 693, 692, 688, 686, 685, 684, 682, 678, 545,
	675, 12, 25, 54, 674, 673, 670, 53, 670, 669,
	668, 667, 39, 0, 665, 664, 663, 662, 661, 3,
	657, 657, 657, 656, 655, 22, 655, 655, 654, 7,
	653, 651, 651, 63, 15, 17, 649, 27, 62, 648,
	28, 1, 24, 648, 13, 19, 648, 26, 647, 18,
	646, 644, 50, 643, 642, 640, 640, 636, 635, 632,
	632, 631, 630, 627, 45, 626, 626, 49, 40, 47,
	625, 623, 621, 620, 619, 618, 617, 616, 608, 592,
	71, 591, 589, 587, 586, 585, 574, 573, 572, 14,
	571, 6, 43, 44, 21, 571, 16, 571, 568, 568,
	4, 11, 23, 529,
}

var yyR1 = [...]uint8{
	0, 118, 39, 39, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 64,
	64, 64, 81, 81, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 4, 5, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 109, 109, 109, 109, 109, 109, 108,
	108, 108, 107, 107, 107, 107, 107, 107, 107, 106,
	106, 106, 106, 110, 105, 104, 104, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 102, 102,
	101, 101, 100, 100, 99, 98, 97, 97, 96, 96,
	95, 94, 93, 93, 93, 93, 93, 93, 92, 92,
	91, 91, 91, 91, 90, 89, 89, 89, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 87, 87, 41, 41, 119, 86, 86, 85,
	85, 84, 84, 42, 42, 42, 13, 16, 16, 45,
	45, 45, 45, 120, 52, 52, 121, 121, 122, 122,
	123, 123, 124, 19, 19, 19, 19, 19, 19, 19,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 51, 50, 50, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 7, 7, 48, 48, 49,
	49, 47, 47, 47, 47, 27, 27, 27, 27, 29,
	30, 31, 22, 28, 2, 2, 2, 2, 2, 2,
	125, 125, 126, 126, 77, 77, 77, 32, 32, 32,
	32, 33, 34, 35, 36, 38, 37, 127, 127, 127,
	128, 128, 128, 129, 129, 113, 130, 130, 131, 111,
	111, 112, 112, 114, 114, 115, 115, 116, 116, 117,
	117, 53, 71, 70, 72, 73, 73, 8, 8, 9,
	9, 11, 80, 80, 79, 79, 44, 14, 14, 17,
	17, 17, 17, 17, 43, 10, 10, 10, 10, 10,
	132, 132, 133, 133, 133, 133, 134, 12, 12, 12,
	12, 12, 12, 23, 23, 54, 54, 135, 135, 55,
	60, 60, 65, 59, 59, 58, 58, 56, 56, 57,
	136, 136, 24, 24, 78, 78, 76, 76, 82, 25,
	75, 75, 74, 74, 26, 137, 137, 137, 137, 138,
	138, 61, 61, 66, 139, 139, 139, 139, 62, 62,
	67, 69, 69, 63, 63, 140, 140, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	15, 15, 6, 6, 141, 141, 142, 142, 142, 143,
	143, 40, 40, 40, 40, 46, 46,
}

var yyR2 = [...]int8{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 5, 6, 2, 3, 3,
	4, 0, 1, 1, 1, 1, 1, 2, 4, 1,
	1, 1, 1, 1, 2, 3, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	1, 1, 1, 1, 5, 2, 1, 1, 1, 1,
	4, 1, 2, 2, 1, 3, 3, 2, 1, 0,
	5, 2, 5, 2, 1, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 4, 2, 0, 1, 1, 0, 1,
	3, 3, 3, 3, 4, 4, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 1, 0, 3, 2,
	4, 3, 5, 1, 1, 3, 1, 2, 1, 1,
	1, 3, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 2, 4, 2, 3, 4, 3, 4, 5, 6,
	6, 3, 4, 3, 4, 1, 3, 1, 1, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 2, 1, 0, 1,
	3, 3, 2, 1, 1, 4, 5, 2, 2, 1,
	1, 1, 3, 3, 2, 2, 2, 2, 2, 2,
	0, 2, 0, 5, 3, 6, 3, 7, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 2, 0, 1, 0, 3, 1, 3, 3, 0,
	3, 0, 2, 0, 2, 0, 2, 0, 2, 0,
	2, 1, 1, 1, 1, 1, 3, 2, 0, 1,
	3, 1, 2, 1, 0, 1, 1, 2, 0, 1,
	4, 5, 4, 0, 2, 2, 2, 3, 1, 4,
	1, 0, 2, 2, 2, 1, 2, 3, 4, 5,
	4, 5, 4, 12, 2, 1, 3, 0, 1, 3,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	0, 2, 7, 5, 0, 1, 1, 3, 3, 8,
	1, 3, 0, 2, 7, 1, 1, 1, 1, 1,
	0, 1, 3, 2, 1, 1, 3, 0, 1, 3,
	1, 1, 3, 2, 0, 1, 0, 1, 1, 3,
	3, 1, 1, 3, 3, 3, 3, 4, 3, 2,
	1, 1, 1, 0, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 11, 9,
}

var yyChk = [...]int16{
	-1000, -118, -1, -2, -29, -30, -31, -22, -27, -28,
	-34, -35, -36, -37, -38, -32, -33, -23, -24, -25,
	-26, -46, 22, 25, 26, 27, 23, 48, 49, 24,
	28, 29, 30, 38, 37, 6, 7, 13, 15, 14,
	16, 99, -39, 63, -39, -39, -39, -39, -39, -2,
	-3, 5, -3, 50, -3, 51, -3, -81, -64, -21,
	4, 5, 44, 68, 126, 58, 112, 131, 132, 7,
	24, 31, 116, 120, 89, 117, 27, 110, 23, 28,
	80, 13, 141, 148, 137, 146, 8, 9, 83, 93,
	119, 114, 42, 57, 84, 20, 43, 138, 150, 39,
	56, 128, 30, 145, 15, 41, 50, 99, 144, 94,
	118, 122, 123, 82, 88, 96, 151, 29, 46, 53,
	66, 105, 91, 129, 130, 103, 6, 14, 32, 55,
	98, 25, 81, 87, 111, 38, 49, 101, 40, 54,
	124, 135, 108, 12, 22, 52, 149, 45, 51, 102,
	113, 140, 104, 121, 147, 100, 18, 90, 115, 127,
	143, 17, 97, 109, 142, 153, 11, 63, 106, 107,
	125, 16, 26, 37, 86, 136, -81, -81, -81, -81,
	11, 12, 8, 9, -81, -49, -47, -18, 72, -19,
	70, 71, 134, 137, -45, -50, 59, -120, 100, -124,
	-123, 4, 66, 84, 83, -53, -51, -42, 101, 5,
	-119, 31, -78, 97, 17, -138, 59, 86, -81, 95,
	-3, -81, -81, -5, 5, -81, -81, -81, 58, -8,
	17, 176, 70, 71, 72, 73, 78, 79, 76, 74,
	95, 77, 75, 64, 96, 19, 21, 133, 67, 139,
	157, 153, 5, -18, -18, -18, -52, -18, -122, 61,
	59, 65, 59, -11, -73, -53, 5, -11, -78, -73,
	-40, -23, -24, -25, -26, -4, -21, 4, 95, 59,
	-47, -7, 18, -9, -10, -11, -43, 149, -12, 59,
	-44, -42, 5, -109, -107, 102, -105, -103, -101, -97,
	-91, -90, -110, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, -99, -98, -95, -94, 128, 129,
	130, 5, 114, -93, 121, 122, 123, 124, 125, -18,
	-18, -18, -18, -18, -18, -18, -18, -18, -18, -18,
	-18, -18, -18, -18, 66, 134, 84, 83, 136, 140,
	138, -121, 141, 5, 58, 60, -52, 62, -18, -52,
	60, -53, 60, -13, 72, -18, -55, -58, 59, 65,
	48, -11, -60, 59, 60, -4, -77, 5, 54, -111,
	42, -18, 58, 47, -133, 69, 10, 33, 35, 34,
	36, -79, -80, 153, -3, -17, -80, 153, -53, 5,
	-43, 5, -12, -10, -14, 151, -108, 100, -107, -88,
	59, 115, 116, 117, 118, 119, -87, 120, -104, 59,
	-102, 59, 126, -104, -104, -104, 59, -89, 151, 131,
	59, -89, -92, 127, 59, -92, -92, 121, 122, -92,
	66, 84, 83, 136, 140, 138, 17, -20, -19, 70,
	71, -120, -18, 58, 62, 60, 60, 60, 20, -23,
	-54, -53, -70, -71, 5, -76, -82, -3, -74, 56,
	-15, 17, 147, -59, -65, -53, 147, 58, 60, -109,
	53, -112, 46, 43, -10, 69, 69, -10, -133, 69,
	-132, 32, -132, -132, -3, 59, -53, 59, -17, 60,
	150, 61, 61, -108, 100, 4, 147, 147, 147, 147,
	59, -52, 4, 4, 129, 129, 4, 59, 4, -92,
	-92, 17, -18, 19, 70, 71, 72, 73, 78, 79,
	76, 74, 95, 77, 75, 64, -20, -20, 60, -18,
	-57, 59, 58, 60, 58, -8, 95, -7, -75, -3,
	-6, 81, 60, 58, -6, -77, -81, -125, 52, 59,
	-129, -113, 41, -81, -81, -10, -10, -134, 68, 69,
	-10, -85, -84, -53, 59, -85, -80, 62, 4, 4,
	61, 60, 116, 118, 119, -87, 119, -87, -87, 4,
	60, 60, 60, 132, 132, 60, -52, 60, -18, -18,
	-20, -20, -20, -20, -20, -20, -20, -20, -20, -20,
	-20, -20, -81, -56, -18, -53, -82, -7, -18, -136,
	98, 58, -142, 4, 82, 148, -65, -142, 53, -3,
	-114, 45, 43, -134, -18, -10, 58, 60, -4, 5,
	-85, 60, 62, 62, 4, 60, -89, -89, 60, 58,
	60, -136, -81, -75, -143, -74, -141, 151, 60, -129,
	-81, -130, -131, -18, -84, -41, 152, -41, 60, 62,
	-18, -141, 80, -69, -63, 59, -126, 55, -115, 44,
	58, -127, 142, 143, -4, -69, 4, -68, 86, 87,
	88, 66, 89, 90, 91, 92, 93, 94, 85, -3,
	-116, 39, -81, -131, -128, 144, -7, -140, 153, -140,
	-140, -140, 91, 134, 66, 4, 60, 59, -117, 40,
	-81, 145, 146, 4, 4, 4, 4, -59, 72, 66,
	-59, -3, -81, -59, 60,
}

var yyDef = [...]int16{
	124, -2, 2, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 2, 2, 2,
	2, 2, 0, 339, 340, 341, 0, 0, 0, 0,
	122, 122, 122, 122, 122, 0, 122, 0, 0, 454,
	0, 470, 1, 3, 344, 345, 346, 347, 348, 349,
	122, 139, 0, 0, 337, 338, 122, 362, 122, 119,
	4, 121, 5, 6, 7, 8, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
	23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
	33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 82,
	83, 84, 85, 86, 87, 88, 89, 90, 91, 92,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 115, 116, 117, 118, 363, 364, 366, 365,
	0, 122, 122, 122, 361, 398, 329, 333, 334, 270,
	0, 0, 0, 305, 263, 264, 0, 266, 0, 268,
	269, 249, 250, 251, 252, 307, 308, 253, 0, -2,
	0, 0, 0, 455, 454, 0, 0, 469, 342, 0,
	0, 343, 123, 0, 142, 358, 359, 360, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 293,
	257, 0, 332, 272, 273, 289, 0, 254, 267, 0,
	0, 0, 0, 445, 401, 395, 391, 0, 0, 441,
	0, 511, 512, 513, 514, 335, 140, 4, 0, 0,
	330, 379, 0, 397, 399, 404, 413, 0, 418, 0,
	408, 406, -2, 271, 161, 0, 162, 163, 164, 165,
	166, 231, 176, 177, 178, 179, 180, 181, 189, 0,
	176, 176, 176, 187, 190, 191, 196, 197, 217, 217,
	214, 173, 209, 201, 209, 209, 204, 0, 209, 274,
	275, 276, 277, 278, 279, -2, -2, -2, -2, -2,
	-2, 286, 287, 288, 290, 0, 294, 296, 0, 301,
	303, 0, 256, 331, 0, 265, 0, 259, 254, 0,
	261, 306, 243, 0, 0, 246, 446, 0, 0, 0,
	0, 462, 0, 0, 0, 336, 0, 0, 0, 381,
	0, 326, 0, 0, 0, 0, 0, 421, 421, 421,
	425, 415, 405, 0, 403, 416, 409, 0, 0, -2,
	413, 236, 418, 0, 414, 0, 153, 157, 161, 167,
	0, 218, 219, 220, 221, 222, 223, 232, 174, 0,
	182, 0, 183, 184, 185, 186, 0, 211, 0, 0,
	0, 213, 195, 208, 0, 202, 203, 209, 209, 207,
	292, 295, 297, 0, 302, 304, 0, 0, 309, 0,
	0, 266, 255, 0, 258, 260, 244, 245, 0, 453,
	0, 435, 396, 393, 392, 398, 456, 0, 325, 0,
	503, 500, 501, 0, 443, 442, 503, 0, 122, 350,
	0, 374, 122, 122, 400, 0, 0, 0, 0, 0,
	422, 420, 423, 424, 402, 0, 0, 0, 417, 427,
	407, 0, 0, 154, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 311, 262, 255,
	122, 0, 0, 439, 0, 325, 0, 450, 463, 460,
	0, 502, 440, 0, 0, 356, 357, 354, 0, 0,
	383, 373, 0, 382, 380, 428, 0, 430, 0, 0,
	432, 0, 239, 0, 0, 0, 419, 159, 0, 0,
	0, 168, 224, 225, 226, 227, 228, 229, 230, 0,
	175, 188, 217, 215, 216, 217, 0, 200, -2, -2,
	312, 313, 314, 315, 316, 317, -2, -2, -2, -2,
	-2, -2, 452, 0, 447, 436, 457, 450, 458, 464,
	122, 0, -2, 506, 507, 508, 444, 505, 351, 0,
	374, 122, 0, 429, 426, 431, 0, 410, 235, 235,
	0, 412, 160, 155, 0, 233, 210, 212, 194, 0,
	449, 459, 451, 461, 505, 0, 484, 504, 352, 385,
	384, 375, 376, 369, 240, 241, 0, 242, 411, 156,
	448, 484, 0, 516, 481, 0, 355, 0, 387, 122,
	0, 372, 367, 368, 234, 325, 509, 483, 487, 488,
	486, 486, 491, 492, 486, 486, 0, 0, 0, 0,
	389, 122, 386, 377, 378, 0, 515, 0, 485, 0,
	0, 0, 0, 0, 0, 499, 482, 0, 433, 122,
	388, 370, 371, 489, 490, 493, 494, 495, 496, 0,
	498, 0, 390, 497, 353,
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:374
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:375
		{

		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:381
		{
			yyVAL.str = yyDollar[1].str
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:383
		{
			yyVAL.str = yyDollar[1].str
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:384
		{
			yyVAL.str = yyDollar[1].str
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:385
		{
			yyVAL.str = yyDollar[1].str
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:386
		{
			yyVAL.str = yyDollar[1].str
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:387
		{
			yyVAL.str = yyDollar[1].str
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:388
		{
			yyVAL.str = yyDollar[1].str
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:389
		{
			yyVAL.str = yyDollar[1].str
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:390
		{
			yyVAL.str = yyDollar[1].str
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:391
		{
			yyVAL.str = yyDollar[1].str
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:392
		{
			yyVAL.str = yyDollar[1].str
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:394
		{
			yyVAL.str = yyDollar[1].str
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:397
		{
			yyVAL.str = yyDollar[1].str
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:399
		{
			yyVAL.str = yyDollar[1].str
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:400
		{
			yyVAL.str = yyDollar[1].str
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:401
		{
			yyVAL.str = yyDollar[1].str
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:402
		{
			yyVAL.str = yyDollar[1].str
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:405
		{
			yyVAL.str = yyDollar[1].str
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:406
		{
			yyVAL.str = yyDollar[1].str
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:409
		{
			yyVAL.str = yyDollar[1].str
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:411
		{
			yyVAL.str = yyDollar[1].str
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:414
		{
			yyVAL.str = yyDollar[1].str
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:415
		{
			yyVAL.str = yyDollar[1].str
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:416
		{
			yyVAL.str = yyDollar[1].str
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:417
		{
			yyVAL.str = yyDollar[1].str
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:418
		{
			yyVAL.str = yyDollar[1].str
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:419
		{
			yyVAL.str = yyDollar[1].str
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:421
		{
			yyVAL.str = yyDollar[1].str
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:422
		{
			yyVAL.str = yyDollar[1].str
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:423
		{
			yyVAL.str = yyDollar[1].str
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:424
		{
			yyVAL.str = yyDollar[1].str
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:425
		{
			yyVAL.str = yyDollar[1].str
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:426
		{
			yyVAL.str = yyDollar[1].str
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:427
		{
			yyVAL.str = yyDollar[1].str
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:428
		{
			yyVAL.str = yyDollar[1].str
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:429
		{
			yyVAL.str = yyDollar[1].str
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:430
		{
			yyVAL.str = yyDollar[1].str
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:431
		{
			yyVAL.str = yyDollar[1].str
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:432
		{
			yyVAL.str = yyDollar[1].str
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:433
		{
			yyVAL.str = yyDollar[1].str
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:434
		{
			yyVAL.str = yyDollar[1].str
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:435
		{
			yyVAL.str = yyDollar[1].str
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:436
		{
			yyVAL.str = yyDollar[1].str
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:438
		{
			yyVAL.str = yyDollar[1].str
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:439
		{
			yyVAL.str = yyDollar[1].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:440
		{
			yyVAL.str = yyDollar[1].str
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:450
		{
			yyVAL.str = yyDollar[1].str
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:453
		{
			yyVAL.str = yyDollar[1].str
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:457
		{
			yyVAL.str = yyDollar[1].str
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:458
		{
			yyVAL.str = yyDollar[1].str
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:459
		{
			yyVAL.str = yyDollar[1].str
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:461
		{
			yyVAL.str = yyDollar[1].str
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:462
		{
			yyVAL.str = yyDollar[1].str
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:465
		{
			yyVAL.str = yyDollar[1].str
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:466
		{
			yyVAL.str = yyDollar[1].str
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:468
		{
			yyVAL.str = yyDollar[1].str
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:469
		{
			yyVAL.str = yyDollar[1].str
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:476
		{
			yyVAL.str = yyDollar[1].str
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:479
		{
			yyVAL.str = yyDollar[1].str
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:480
		{
			yyVAL.str = yyDollar[1].str
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:481
		{
			yyVAL.str = yyDollar[1].str
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:483
		{
			yyVAL.str = yyDollar[1].str
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:484
		{
			yyVAL.str = yyDollar[1].str
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:485
		{
			yyVAL.str = yyDollar[1].str
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:486
		{
			yyVAL.str = yyDollar[1].str
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:488
		{
			yyVAL.str = yyDollar[1].str
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:489
		{
			yyVAL.str = yyDollar[1].str
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:490
		{
			yyVAL.str = yyDollar[1].str
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:491
		{
			yyVAL.str = yyDollar[1].str
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:492
		{
			yyVAL.str = yyDollar[1].str
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:494
		{
			yyVAL.str = yyDollar[1].str
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:495
		{
			yyVAL.str = yyDollar[1].str
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:498
		{
			yyVAL.str = yyDollar[1].str
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:498
		{
			yyVAL.str = yyDollar[1].str
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:498
		{
			yyVAL.str = yyDollar[1].str
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:502
		{
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:503
		{
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:509
		{
			yyVAL.node = nil
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:511
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:513
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:515
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:517
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:519
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:521
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:523
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:525
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:527
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:529
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:531
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:533
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:535
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:537
		{
			setParseTree(yylex, yyDollar[1].node)
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:543
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:548
		{
			yyVAL.str = yyDollar[1].str
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:563
		{
			yyVAL.str = yyDollar[1].str
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:565
		{
			yyVAL.str = "AND"
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:567
		{
			yyVAL.str = "OR"
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:569
		{
			yyVAL.str = "!="
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:571
		{
			yyVAL.str = "="
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:573
		{
			yyVAL.str = "<"
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:575
		{
			yyVAL.str = ">"
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:577
		{
			yyVAL.str = ">="
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:579
		{
			yyVAL.str = "<="
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:581
		{
			yyVAL.str = yyDollar[1].str
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:597
		{
			yyVAL.str = yyDollar[1].str
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:601
		{
			yyVAL.str = yyDollar[2].str
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:606
		{
			yyVAL.str = yyDollar[1].str
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:610
		{
			yyVAL.str = yyDollar[2].str
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:614
		{

			yyVAL.str = yyDollar[1].str
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:619
		{
			yyVAL.str = yyDollar[2].str
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:627
		{
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:629
		{
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:631
		{
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:635
		{
			yyVAL.str = yyDollar[1].str
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:637
		{
			yyVAL.str = yyDollar[1].str
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:639
		{
			yyVAL.str = yyDollar[1].str
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:641
		{
			yyVAL.str = yyDollar[1].str
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:646
		{

		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:650
		{

		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:666
		{
			yyVAL.str = yyDollar[1].str
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:667
		{
			yyVAL.str = yyDollar[1].str
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:668
		{
			yyVAL.str = yyDollar[1].str
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:673
		{
			yyVAL.str = yyDollar[1].str
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:686
		{

			yyVAL.str = yyDollar[1].str
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:695
		{
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:696
		{
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:703
		{

			yyVAL.str = yyDollar[1].str
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:708
		{
			yyVAL.str = yyDollar[1].str
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:712
		{
			yyVAL.str = yyDollar[1].str
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:716
		{
			yyVAL.str = yyDollar[1].str
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:720
		{
			yyVAL.str = yyDollar[1].str
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:724
		{
			yyVAL.str = yyDollar[1].str
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:728
		{
			yyVAL.str = yyDollar[1].str
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:732
		{
			yyVAL.str = yyDollar[1].str
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:736
		{
			yyVAL.str = yyDollar[1].str
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:740
		{
			yyVAL.str = yyDollar[1].str
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:744
		{
			yyVAL.str = yyDollar[1].str
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:750
		{
			/*
			 * Check FLOAT() precision limits assuming IEEE floating
			 * types - thomas 1997-09-18
			 */

		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:758
		{
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:767
		{
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:770
		{
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:777
		{
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:780
		{
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:786
		{

		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:793
		{
			/* bit defaults to bit(1), varbit to no limit */

		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:804
		{
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:807
		{
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:812
		{
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:815
		{
			/* Length was not specified so allow to be unrestricted.
			 * This handles problems with fixed-length (bpchar) strings
			 * which in column definitions must default to a length
			 * of one, but should not be constrained if the length
			 * was not specified.
			 */

		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:828
		{

		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:834
		{
			/* char defaults to char(1), varchar to no limit */

		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:842
		{
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:844
		{
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:846
		{
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:848
		{
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:850
		{
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:852
		{
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:856
		{
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:857
		{
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:866
		{

		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:870
		{

		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:874
		{

		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:878
		{

		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:886
		{

		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:892
		{
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:893
		{
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:894
		{
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:899
		{
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:901
		{
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:903
		{
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:905
		{
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:907
		{
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:909
		{
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:911
		{

		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:915
		{

		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:919
		{

		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:923
		{

		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:927
		{

		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:931
		{

		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:935
		{

		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:939
		{
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:944
		{
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:947
		{
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:979
		{

		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:982
		{
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:990
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:991
		{
			yyVAL.strlist = nil
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:996
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1000
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1006
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1010
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1018
		{
			yyVAL.node = nil
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1021
		{
			yyVAL.node = nil
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1025
		{
			yyVAL.node = nil
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1029
		{
			yyVAL.node = nil
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1034
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1038
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1046
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1050
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1054
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1058
		{
			yyVAL.node = &AExprConst{
				Value: yyDollar[1].str,
			}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1067
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1071
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1081
		{

		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1089
		{

		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1094
		{
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1095
		{
		}
	case 262:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1099
		{
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1103
		{
			yyVAL.node = yyDollar[1].node
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1106
		{
			yyVAL.node = yyDollar[1].node
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1109
		{
			yyVAL.node = yyDollar[2].node
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1112
		{
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1114
		{
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1116
		{
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1117
		{
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1120
		{
			yyVAL.node = yyDollar[1].node
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1122
		{
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1150
		{
			yyVAL.node = yyDollar[2].node
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1152
		{
			yyVAL.node = yyDollar[2].node
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1154
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1162
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1170
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1178
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1186
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1194
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1202
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1210
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1218
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1226
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1234
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1242
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1251
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1264
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1272
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[3].node,
				Op:    yyDollar[2].str,
			}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1280
		{
			yyVAL.node = yyDollar[2].node
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1390
		{
			yyVAL.node = yyDollar[1].node
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1392
		{
			yyVAL.node = yyDollar[1].node
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1394
		{
			yyVAL.node = yyDollar[1].node
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1396
		{
			yyVAL.node = yyDollar[1].node
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1415
		{
			yyVAL.node = yyDollar[1].node
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1417
		{
			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1419
		{
			yyVAL.node = yyDollar[1].node
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1421
		{
			yyVAL.node = yyDollar[1].node
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1441
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[5].node,
				Op:    yyDollar[3].str,
			}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1449
		{
			yyVAL.node = &AExprOp{
				Left:  yyDollar[1].node,
				Right: yyDollar[6].node,
				Op:    yyDollar[3].str,
			}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1457
		{
			yyVAL.node = &AExprOp{
				Left: yyDollar[1].node,
				Right: &AExprList{
					List: []Node{
						yyDollar[4].node,
						yyDollar[6].node,
					},
				},
				Op: "BETWEEN",
			}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1573
		{
			yyVAL.node = yyDollar[1].node
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1575
		{
			yyVAL.node = yyDollar[1].node
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1577
		{
			yyVAL.node = yyDollar[1].node
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1581
		{
			yyVAL.node = yyDollar[1].node
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1591
		{
			/*
			 * The SQL spec only allows DEFAULT in "contextually typed
			 * expressions", but for us, it's easier to allow it in
			 * any a_expr and then throw error during parse analysis
			 * if it's in an inappropriate context.  This way also
			 * lets us say something smarter than "syntax error".
			 */

		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1605
		{
			yyVAL.node = &ColumnRef{
				ColName:    yyDollar[3].str,
				TableAlias: yyDollar[1].str,
			}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1613
		{
			yyVAL.node = &ColumnRef{
				ColName: yyDollar[1].str,
			}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1617
		{
			yyVAL.node = yyDollar[1].node
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1625
		{
			yyVAL.node = yyDollar[1].node
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1627
		{
			yyVAL.node = yyDollar[2].node
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1629
		{
			yyVAL.node = yyDollar[2].node
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1631
		{ /* result not matter */
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1633
		{ /* result not matter */
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1635
		{ /* result not matter */
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1637
		{ /* result not matter */
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1639
		{ /* result not matter */
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1641
		{ /* result not matter */
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1643
		{ /* result not matter */
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1645
		{ /* result not matter */
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1647
		{ /* result not matter */
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1649
		{ /* result not matter */
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1651
		{ /* result not matter */
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1653
		{ /* result not matter */
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1654
		{ /* result not matter */
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1659
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1663
		{
			yyVAL.node = yyDollar[2].node
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1668
		{
			yyVAL.nodeList = yyDollar[1].nodeList
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1669
		{
			yyVAL.nodeList = nil
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1673
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1674
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1678
		{
			yyVAL.node = yyDollar[1].node
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1682
		{
			yyVAL.node = yyDollar[1].node
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1686
		{
			yyVAL.node = yyDollar[1].node
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1690
		{
			yyVAL.node = &AExprEmpty{}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:1697
		{
			yyVAL.node = &VarSet{
				Name:  yyDollar[2].str,
				Value: yyDollar[4].str,
			}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1703
		{
			yyVAL.node = &VarSet{
				IsLocal: true,
				Name:    yyDollar[3].str,
				Value:   yyDollar[5].str,
			}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1710
		{
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1711
		{
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1716
		{
			yyVAL.node = &Begin{}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1725
		{
			yyVAL.node = &Commit{}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1734
		{
			yyVAL.node = &Rollback{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1742
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1750
		{
			yyVAL.node = &Execute{
				Id: yyDollar[2].str,
			}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1757
		{
			yyVAL.node = yyDollar[1].node
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1759
		{
			yyVAL.node = yyDollar[1].node
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1761
		{
			yyVAL.node = yyDollar[1].node
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1763
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1765
		{
			yyVAL.node = yyDollar[1].node
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1767
		{
			yyVAL.node = &Explain{
				Stmt: yyDollar[2].node,
			}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1774
		{
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1775
		{
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1778
		{
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:1779
		{
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1782
		{
			yyVAL.tableelt = []TableElt{{
				ColName: yyDollar[1].str,
				ColType: yyDollar[2].str,
			},
			}
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lyx/gram.y:1789
		{
			yyVAL.tableelt = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1792
		{
			yyVAL.tableelt = append(yyDollar[1].tableelt, yyDollar[3].tableelt...)
		}
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:1797
		{
			yyVAL.node = &CreateTable{
				TableName: yyDollar[3].str,
				TableElts: yyDollar[5].tableelt,
			}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1802
		{
			yyVAL.node = &Index{}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1806
		{
			yyVAL.node = &CreateRole{}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1810
		{
			yyVAL.node = &CreateDatabase{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1817
		{
			yyVAL.node = &Alter{}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1824
		{
			yyVAL.node = &Vacuum{}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1831
		{
			yyVAL.node = &Cluster{}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1839
		{
			yyVAL.node = &Analyze{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1846
		{
			yyVAL.node = &Drop{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1854
		{
			yyVAL.node = &Truncate{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1862
		{
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1863
		{
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1864
		{
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1868
		{
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1869
		{
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1870
		{
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1876
		{
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1877
		{
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1881
		{
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1885
		{
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1886
		{
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1895
		{
			/* no operator */
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1902
		{
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1902
		{
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1903
		{
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1903
		{
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1904
		{
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1904
		{
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1905
		{
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1905
		{
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1906
		{
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1906
		{
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1907
		{
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1907
		{
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1912
		{
			yyVAL.str = yyDollar[1].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1921
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1928
		{
			yyVAL.str = yyDollar[1].str
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1930
		{
			yyVAL.str = yyDollar[1].str
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1969
		{
			yyVAL.from = &RangeVar{
				SchemaName:   "",
				RelationName: yyDollar[1].str,
				Alias:        "",
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1977
		{
			yyVAL.from = &RangeVar{
				SchemaName:   yyDollar[1].str,
				RelationName: yyDollar[3].str,
				Alias:        "",
			}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:1992
		{
			yyVAL.from_list = yyDollar[2].from_list
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:1993
		{
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:1997
		{
			yyVAL.from_list = []FromClauseNode{yyDollar[1].from}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:1998
		{
			yyVAL.from_list = append(yyDollar[1].from_list, yyDollar[3].from)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2003
		{
			/* inheritance query, implicitly */
			yyVAL.tableref = yyDollar[1].from
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2014
		{
			yyVAL.str = yyDollar[2].str
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2018
		{
			yyVAL.str = yyDollar[1].str
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2024
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2035
		{
			yyVAL.node = yyDollar[1].node
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2040
		{
			yyVAL.bool = true
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2041
		{
			yyVAL.bool = false
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2052
		{
			yyVAL.node = nil
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2056
		{
			yyVAL.node = nil
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2060
		{

		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2064
		{

		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2068
		{
			yyVAL.node = nil
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2086
		{
			yyVAL.node = yyDollar[1].node
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2094
		{
			yyDollar[1].tableref.SetAlias(yyDollar[2].str)
			yyVAL.from = yyDollar[1].tableref
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2099
		{

		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2103
		{

		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2107
		{
			yyVAL.from = yyDollar[1].tableref
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2111
		{
			yyDollar[2].tableref.SetAlias(yyDollar[4].str)
			yyVAL.from = yyDollar[2].tableref
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2119
		{
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2120
		{
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2124
		{
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2125
		{
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2126
		{
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2127
		{
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2138
		{

		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2146
		{
			yyVAL.tableref = yyDollar[2].tableref
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2150
		{
			/* CROSS JOIN is same as unqualified inner join */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2158
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2165
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[3].from,
			}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2173
		{
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[5].from,
			}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2180
		{
			/* letting join_type reduce to empty doesn't work */
			yyVAL.tableref = &JoinExpr{
				Larg: yyDollar[1].from,
				Rarg: yyDollar[4].from,
			}
		}
	case 433:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lyx/gram.y:2195
		{
			yyVAL.node = &Select{
				FromClause: yyDollar[3].from_list,
				Where:      yyDollar[4].node,
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2201
		{
			yyVAL.node = &Select{
				TargetList: yyDollar[2].nodeList,
			}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2209
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2210
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2215
		{
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2215
		{
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2218
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2224
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2225
		{
			yyVAL.strlist = nil
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2230
		{
			yyVAL.str = yyDollar[1].str
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2236
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2237
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2242
		{
			yyVAL.strlist = nil
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2245
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2253
		{
			yyVAL.nodeList = []Node{yyDollar[1].node}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2255
		{
			yyVAL.nodeList = append(yyDollar[1].nodeList, yyDollar[3].node)
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2260
		{
			yyVAL.nodeList = yyDollar[2].nodeList
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2266
		{
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2267
		{
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2273
		{
			yyVAL.node = &Insert{
				TableRef: yyDollar[3].tableref,
				Columns:  yyDollar[4].strlist,
				Values:   yyDollar[6].nodeList,
			}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lyx/gram.y:2279
		{
			yyVAL.node = &Insert{
				TableRef:  yyDollar[3].tableref,
				Columns:   yyDollar[4].strlist,
				SubSelect: yyDollar[5].node,
			}
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2288
		{
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2289
		{
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2295
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2296
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2301
		{
			yyVAL.str = yyDollar[1].str
		}
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lyx/gram.y:2311
		{
			yyVAL.node = &Update{
				TableRef: yyDollar[3].tableref,
				Where:    yyDollar[7].node,
			}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2322
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2323
		{
			yyVAL.strlist = append(yyDollar[3].strlist, yyDollar[1].str)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2328
		{
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2329
		{
		}
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lyx/gram.y:2333
		{
			yyVAL.node = &Delete{
				TableRef: yyDollar[4].tableref,
				Where:    yyDollar[6].node,
			}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2342
		{
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2343
		{
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2344
		{
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2350
		{
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2355
		{
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2357
		{
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2363
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2367
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2374
		{

		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2380
		{
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2382
		{
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2383
		{
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2384
		{
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2389
		{
			yyVAL.strlist = []string{yyDollar[1].str}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2393
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[3].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2400
		{
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2404
		{
			yyVAL.strlist = yyDollar[1].strlist
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2405
		{
			yyVAL.strlist = yyDollar[2].strlist
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2410
		{
			yyVAL.strlist = append(yyDollar[1].strlist, yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2411
		{
			yyVAL.strlist = nil
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2420
		{
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2423
		{
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2426
		{
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2429
		{
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2432
		{
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2435
		{
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2438
		{
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2441
		{
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2444
		{
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2447
		{
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lyx/gram.y:2450
		{
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2453
		{
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lyx/gram.y:2456
		{
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2462
		{
			yyVAL.bool = true
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2463
		{
			yyVAL.bool = false
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2467
		{
			yyVAL.bool = true
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2468
		{
			yyVAL.bool = false
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2476
		{
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2477
		{
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lyx/gram.y:2478
		{
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lyx/gram.y:2484
		{
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lyx/gram.y:2486
		{
		}
	case 515:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lyx/gram.y:2501
		{
			yyVAL.node = &Copy{
				TableRef: yyDollar[3].from,
				Where:    yyDollar[11].node,
				IsFrom:   yyDollar[5].bool,
			}
		}
	case 516:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lyx/gram.y:2509
		{
			yyVAL.node = &Copy{
				IsFrom:  false,
				SubStmt: yyDollar[3].node,
			}
		}
	}
	goto yystack /* stack new state and value */
}
